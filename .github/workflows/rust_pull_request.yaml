on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]

name: RustPullRequest

defaults:
 run:
  working-directory: ./lib

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.68.2
          - stable
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3.5.2

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: Run cargo check
        run: cargo check --all-features --tests

  fmt:
    needs: [check]
    name: Rustfmt
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3.5.2

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

  clippy:
    needs: [check]
    name: Clippy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
        package:
          - signalrs-derive
          - signalrs-client
          - client-integration-tests
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3.5.2

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: clippy

      - name: Run cargo clippy for ${{ matrix.package }}
        run: cargo clippy --all-targets --all-features -p ${{ matrix.package }} -- -D warnings


  check-examples:
    needs: [check]
    name: Check examples
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.68.2
          - stable
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3.5.2

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: clippy

      - name: Run cargo check
        run: cargo check --examples

  test:
    needs: [check]
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3.5.2

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: Run cargo test
        run: cargo test --all-features --workspace --exclude client-integration-tests

  client-integration-tests:
    needs: [test, fmt, clippy, check-examples]
    name: Client integration tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3.5.2

      - name: Build test image
        run: docker build -t signalrs-client-integration-tests -f ./scripts/Dockerfile.integration .
        working-directory: .

      - name: Run test image
        run: docker run signalrs-client-integration-tests
        working-directory: .
